#include <Adafruit_GFX.h>      
#include <Adafruit_SSD1306.h>
#include <Wire.h>
#include "MAX30105.h"       
#include "heartRate.h"  

MAX30105 HrSense;

const byte Count = 4; 
byte rates[Count]; 
byte rateSpot = 0;
long lb = 0; 
float bpm;
int average;
int prev;
int a;
long tm,t,d; //variables to record time in seconds

#define SCREEN_WIDTH 128 // Width of OLED
#define SCREEN_HEIGHT 32 // height of OLED
#define OLED_RESET    -1 

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// These 2 arrays are used to draw the shape of a beating heart
static const unsigned char PROGMEM Heartshape1[] =
{ 0x03, 0xC0, 0xF0, 0x06, 0x71, 0x8C, 0x0C, 0x1B, 0x06, 0x18, 0x0E, 0x02, 0x10, 0x0C, 0x03, 0x10,
0x04, 0x01, 0x10, 0x04, 0x01, 0x10, 0x40, 0x01, 0x10, 0x40, 0x01, 0x10, 0xC0, 0x03, 0x08, 0x88,
0x02, 0x08, 0xB8, 0x04, 0xFF, 0x37, 0x08, 0x01, 0x30, 0x18, 0x01, 0x90, 0x30, 0x00, 0xC0, 0x60,
0x00, 0x60, 0xC0, 0x00, 0x31, 0x80, 0x00, 0x1B, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x04, 0x00,  };

static const unsigned char PROGMEM Heartshape2[] =
{ 0x01, 0xF0, 0x0F, 0x80, 0x06, 0x1C, 0x38, 0x60, 0x18, 0x06, 0x60, 0x18, 0x10, 0x01, 0x80, 0x08,
0x20, 0x01, 0x80, 0x04, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x08, 0x03,
0x80, 0x00, 0x08, 0x01, 0x80, 0x00, 0x18, 0x01, 0x80, 0x00, 0x1C, 0x01, 0x80, 0x00, 0x14, 0x00,
0x80, 0x00, 0x14, 0x00, 0x80, 0x00, 0x14, 0x00, 0x40, 0x10, 0x12, 0x00, 0x40, 0x10, 0x12, 0x00,
0x7E, 0x1F, 0x23, 0xFE, 0x03, 0x31, 0xA0, 0x04, 0x01, 0xA0, 0xA0, 0x0C, 0x00, 0xA0, 0xA0, 0x08,
0x00, 0x60, 0xE0, 0x10, 0x00, 0x20, 0x60, 0x20, 0x06, 0x00, 0x40, 0x60, 0x03, 0x00, 0x40, 0xC0,
0x01, 0x80, 0x01, 0x80, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x0C, 0x00,
0x00, 0x08, 0x10, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x01, 0x80, 0x00  };


void setup() {  
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); //Start the OLED display
  display.display();
  delay(3000);
  // Initialize sensor
  HrSense.begin(Wire, I2C_SPEED_FAST); 
  HrSense.setup(); 
  HrSense.setPulseAmplitudeRed(0x0A); 
  Serial.begin(9600);
  analogReference(DEFAULT);
}

void loop() {
 long str = HrSense.getIR();   
tm = millis();
  t = tm/1000;
  d = tm%1000;
Serial.flush();
                                           
if(str > 6500){                                         
    display.clearDisplay();                                  
    display.drawBitmap(5, 5, Heartshape1, 24, 21, WHITE);      
    display.setTextSize(2);                       
    display.setTextColor(WHITE); 
    display.setCursor(50,0);                
    display.println("BPM");             
    display.setCursor(50,18);                
    display.println(average); 
    display.display();
    
  if (checkForBeat(str) == true)              
  {
    display.clearDisplay();                               
    display.drawBitmap(0, 0, Heartshape2, 32, 32, WHITE);   
    display.setTextSize(2);                                
    display.setTextColor(WHITE);             
    display.setCursor(50,0);                
    display.println("BPM");             
    display.setCursor(50,18);                
    display.println(average); 
    display.display();

    //printing system time in seconds
  Serial.print("time : ");
  Serial.print(t);
  Serial.print(".");
  Serial.print(d);
  Serial.print("s\t");

  //printing heartrate sensor values
  Serial.print("HeartRate : ");
  Serial.print(average);
  Serial.println("BPM");
    tone(3,1000);       //buzzer just for show that a quantity of heartrate is measured                                
    delay(150);
   noTone(3);                                   

    long delta = millis() - lb;                
    lb = millis();
    prev = average; 
    bpm = 60 / (delta / 1000.0);    //Calculating the BPM

    if (bpm < 255 && bpm > 20)          
    {
      rates[rateSpot++] = (byte)bpm; //Store this reading in the array
      rateSpot %= Count; //Wrap variable

      //Take average of readings
      average = 0;
      for (byte x = 0 ; x < Count ; x++)
        average += rates[x];
      average /= Count;
    }

    if(prev > (average+5) && prev > 60){
      Serial.write(1);
      Serial.println("Play Music 1");
      a = 1;
      }
    else if(prev < (average-5) && prev > 25){
      Serial.write(2);
      Serial.println("Play Music 2");
      a = 2;
      }
   else if(prev > (average+5) && prev > 25){
      Serial.write(3);
      Serial.println("Play Music 3");
      a = 3;
      }
      else{
       Serial.write(a);
       if(a != 0){
      Serial.print("Continue Play Music ");
      Serial.print(a);
      Serial.println();
       }
       else{
        Serial.println("Wait for measuring heartrate");
        }
      }
  }

}
  if (str < 6500){      
     average=0;
     display.clearDisplay();
     display.setTextSize(1);                    
     display.setTextColor(WHITE);             
     display.setCursor(30,5);                
     display.println("PLEASE PLACE "); 
     display.setCursor(30,15);
     display.println("YOUR FINGER");  
     display.display();
     noTone(3);
     }

}
